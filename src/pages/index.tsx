import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useEffect, useState } from "react";
import SciteMeetingBanner from "~/components/banners/sciteMeetingBanner";
import WorkOpportunityBanner from "~/components/banners/workOpportunityBanner";
import { motion, AnimatePresence } from "framer-motion";
import { TheoryButton, ProductsButton } from "~/components/mainButtons";
import MainSidebar from "~/components/mainSidebar";

import { api } from "~/utils/api";

export default function Home() {
  const [isOddMinute, setIsOddMinute] = useState(
    new Date().getMinutes() % 2 !== 0,
  );

  useEffect(() => {
    const interval = setInterval(() => {
      const currentMinute = new Date().getMinutes();
      setIsOddMinute(currentMinute % 2 !== 0);
    }, 1000); // Check every second to update promptly at minute change

    return () => clearInterval(interval); // Clean up the interval on component unmount
  }, []);
  return (
    <>
      <Head>
        <title>SCITE finance</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/scite.ico" />
      </Head>
      <main className="min-w-screen flex h-screen min-h-screen items-stretch bg-[#EFF3F4]">
        <MainSidebar />
        <div className="my-3 ml-10 mr-5 flex w-full flex-col items-stretch">
          <AnimatePresence>
            <div>
              {isOddMinute ? (
                <motion.div
                  key="scite"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  transition={{ duration: 0.5 }}
                >
                  <SciteMeetingBanner />
                </motion.div>
              ) : (
                <motion.div
                  key="work"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  transition={{ duration: 0.5 }}
                >
                  <WorkOpportunityBanner />
                </motion.div>
              )}
            </div>
          </AnimatePresence>
          <div className="relative mt-3 flex h-auto w-full flex-grow flex-row items-stretch">
            <TheoryButton />
            <ProductsButton />
          </div>
        </div>
        <div className="mx-5 my-3 min-w-[420px] bg-[#3A5C8F]"></div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
